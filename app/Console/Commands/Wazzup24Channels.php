<?php

namespace App\Console\Commands;

use App\Services\Wazzup24Service;
use Illuminate\Console\Command;

class Wazzup24Channels extends Command
{
    protected $signature = 'wazzup24:channels';
    protected $description = '–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ Wazzup24 –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤';

    public function handle(Wazzup24Service $wazzupService)
    {
        $this->info('üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ Wazzup24...');

        $result = $wazzupService->getChannels();

        if ($result['success']) {
            $this->info('‚úÖ –ö–∞–Ω–∞–ª—ã –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
            
            if (empty($result['channels'])) {
                $this->warn('‚ö†Ô∏è –ö–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫–∫–∞—É–Ω—Ç Wazzup24.');
                return 0;
            }

            $this->table(
                ['ID –∫–∞–Ω–∞–ª–∞', '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', 'Plain ID', '–°—Ç–∞—Ç—É—Å'],
                collect($result['channels'])->map(function ($channel) {
                    return [
                        $channel['channelId'] ?? 'N/A',
                        $channel['transport'] ?? 'N/A',
                        $channel['plainId'] ?? 'N/A',
                        $channel['state'] ?? 'N/A'
                    ];
                })->toArray()
            );

            $activeChannel = collect($result['channels'])->firstWhere('state', 'active');
            if ($activeChannel) {
                $this->info('‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω:');
                $this->line("ID –∫–∞–Ω–∞–ª–∞: {$activeChannel['channelId']}");
                $this->line("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {$activeChannel['transport']}");
                $this->line("Plain ID: {$activeChannel['plainId']}");
                $this->line("–°—Ç–∞—Ç—É—Å: {$activeChannel['state']}");
            } else {
                $this->warn('‚ö†Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
            }

        } else {
            $this->error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤!');
            $this->error('–û—à–∏–±–∫–∞: ' . ($result['error'] ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }

        return $result['success'] ? 0 : 1;
    }
}
