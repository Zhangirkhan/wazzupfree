<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Http;

class Wazzup24Check extends Command
{
    protected $signature = 'wazzup24:check';
    protected $description = '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ webhook Wazzup24';

    public function handle()
    {
        $this->info('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ webhook Wazzup24...');
        
        $apiKey = config('wazzup24.api.key');
        $channelId = config('wazzup24.api.channel_id');
        $apiUrl = config('wazzup24.api.url');
        $webhookUrl = config('wazzup24.api.webhook_url');
        
        $this->info('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
        $this->line('  API Key: ' . ($apiKey ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'));
        $this->line('  Channel ID: ' . ($channelId ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'));
        $this->line('  API URL: ' . $apiUrl);
        $this->line('  Webhook URL: ' . $webhookUrl);
        $this->newLine();
        
        if (!$apiKey || !$channelId) {
            $this->error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è!');
            return 1;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å webhook URL
        $this->info('üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ webhook URL...');
        try {
            $response = Http::timeout(10)->post($webhookUrl, [
                'test' => true,
                'messages' => []
            ]);
            if ($response->successful()) {
                $this->info('‚úÖ Webhook URL –¥–æ—Å—Ç—É–ø–µ–Ω');
            } else {
                $this->warn('‚ö†Ô∏è Webhook URL –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: ' . $response->status());
            }
        } catch (\Exception $e) {
            $this->error('‚ùå Webhook URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ' . $e->getMessage());
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ webhook'–∏ –≤ Wazzup24
        $this->info('üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ webhook –≤ Wazzup24...');
        try {
            $wazzupService = app(\App\Services\Wazzup24Service::class);
            $result = $wazzupService->getWebhooks();
            
            if ($result['success']) {
                $webhooks = $result['data'];
                $this->info('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è webhook —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞');
                
                if (empty($webhooks)) {
                    $this->warn('‚ö†Ô∏è Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
                } else {
                    $this->info('üìã –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ webhook:');
                    $this->line('  - URL: ' . ($webhooks['webhooksUri'] ?? 'N/A'));
                    $this->line('  - –ü–æ–¥–ø–∏—Å–∫–∏:');
                    if (isset($webhooks['subscriptions'])) {
                        foreach ($webhooks['subscriptions'] as $key => $value) {
                            $this->line('    - ' . $key . ': ' . ($value ? '–î–∞' : '–ù–µ—Ç'));
                        }
                    }
                }
            } else {
                $this->error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ webhook!');
                $this->error('–û—à–∏–±–∫–∞: ' . $result['error']);
            }
            
        } catch (\Exception $e) {
            $this->error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: ' . $e->getMessage());
        }
        
        $this->newLine();
        $this->info('üí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: php artisan wazzup24:setup');
        
        return 0;
    }
}
